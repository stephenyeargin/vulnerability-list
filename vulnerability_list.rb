# frozen_string_literal: true

require 'octokit'
require 'json'
require 'terminal-table'

client = Octokit::Client.new(access_token: ENV['GITHUB_TOKEN'])
client.auto_paginate = true

query = %(

  query {
      user(login: "#{client.user.login}") {
        repositories(first: 100) {
          totalCount
          pageInfo {
            hasNextPage
            hasPreviousPage
            startCursor
            endCursor
          }
          nodes {
            name
            isArchived
            vulnerabilityAlerts(first: 100) {
              totalCount
              pageInfo {
                hasNextPage
                hasPreviousPage
                startCursor
                endCursor
              }
              nodes {
                createdAt
                vulnerableRequirements
                dismissedAt
                dismissReason
                securityVulnerability {
                  advisory {
                    description
                    identifiers {
                      value
                    }
                  }
                  severity
                  package {
                    ecosystem
                    name
                  }
                  updatedAt
                  vulnerableVersionRange
                }
              }
            }
          }
        }
      }
    }

)

response = client.post '/graphql', { query: query }.to_json

rows = []
response['data']['user']['repositories']['nodes'].each do |repository|
  next if repository['vulnerabilityAlerts']['totalCount'].zero?
  next if repository['isArchived']

  rows << [repository['name'], repository['vulnerabilityAlerts']['totalCount']]
end

table = Terminal::Table.new headings: ['Repository', 'Count'], rows: rows
table.align_column(1, :right)
puts table
